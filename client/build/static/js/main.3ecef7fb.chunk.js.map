{"version":3,"sources":["helpers/index.js","helpers/useChat.js","helpers/server-end-point.js","components/chatRoom.js","components/square.js","components/board.js","components/fallen-soldier-block.js","pieces/piece.js","pieces/bishop.js","pieces/king.js","pieces/knight.js","pieces/pawn.js","pieces/queen.js","pieces/rook.js","helpers/board-initialiser.js","components/game.js","App.js","index.js"],"names":["diagonalDictionaryTLBR","require","diagonalDictionaryTRBL","rowDictionary","columnDictionary","module","exports","isSameRow","src","dest","isSameColumn","isSameDiagonal","isPathClean","srcToDestPath","squares","reduce","acc","curr","useChat","roomId","username","useState","messages","setMessages","socketRef","useRef","useEffect","current","socketIOClient","forceNew","reconnectionDelay","reconnection","reconnectionAttempts","transports","agent","upgrade","rejectUnauthorized","query","on","message","incomingMessage","ownedByCurrentUser","senderId","id","disconnect","sendMessage","messageBody","emit","body","err","alert","ChatRoom","props","room","React","newMessage","setNewMessage","console","log","element","document","getElementById","scrollTop","scrollHeight","clientHeight","className","map","i","key","value","onChange","event","target","placeholder","onClick","length","Square","shade","style","keyVal","Board","squareShade","this","board","squareRows","j","isEven","push","renderSquare","Component","num","FallenSoldierBlock","square","piece","whiteFallenSoldiers","ws","index","blackFallenSoldiers","bs","Piece","player","iconUrl","backgroundImage","white_kill0","black_kill0","Bishop","kills","white_image","black_image","getSrcToDestPath","pathStart","pathEnd","incrementBy","path","Math","abs","King","Knight","Pawn","initialPositions","1","2","isDestEnemyOccupied","indexOf","Queen","Rook","initialiseChessBoard","Array","fill","Game","addPieceNameToSquares","currentState","constructor","name","getPieceByInitialPosition","initialPosition","tempPieces","pieces","JSON","parse","stringify","state","selectedPiece","Object","keys","forEach","colour","position_history","getPieceById","getPiece","position","alive","killPieceAt","piecesAndSquares","updatePiecesObject","setState","createPieceObject","owner","newPiece","piece_name","resurrectPiece","currentPiece","occupyingPiece","checkKingIsAlive","currentTempPieces","updated_piece","switchPlayerTurn","currentPlayer","canPlayerMove","currentPlayerTurn","playerList","theFloodEffect","currentPosition","originalPosition","sourceSelection","status","turn","white","black","gameOver","piece_owner","socket","users","gameState","attacking","moving","backgroundColor","isMovePossible","Boolean","previouslySelectedPiece","piece_object","setTimeout","updateGameState","players","handleClick","createKnightsTest","href","App","setRoom","initialRoom","setInitialRoom","showGameScreen","setShowGameScreen","setUsername","gameContent","homeContent","type","ReactDOM","render"],"mappings":"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","file":"static/js/main.3ecef7fb.chunk.js","sourcesContent":["const diagonalDictionaryTLBR = require('../dictionaries/diagonalTopLeftBottomRight.json');\nconst diagonalDictionaryTRBL = require('../dictionaries/diagonalTopRightBottomLeft.json');\nconst rowDictionary = require('../dictionaries/row.json');\nconst columnDictionary = require('../dictionaries/column.json');\n\nconst isSameRow = (src, dest) => {\n  return !!(rowDictionary[src] && rowDictionary[src][dest]);\n}\n\nconst isSameColumn = (src, dest) => {\n  return !!(columnDictionary[src] && columnDictionary[src][dest]);\n}\n\nconst isSameDiagonal = (src, dest) => {\n  return !!((diagonalDictionaryTLBR[src] && diagonalDictionaryTLBR[src][dest]) ||\n    (diagonalDictionaryTRBL[src] && diagonalDictionaryTRBL[src][dest]))\n}\n\nconst isPathClean = (srcToDestPath, squares) => srcToDestPath.reduce((acc, curr) => !squares[curr] && acc, true)\n\n\nmodule.exports = {\n  isSameRow,\n  isSameColumn,\n  isSameDiagonal,\n  isPathClean\n}","import { useEffect, useRef, useState } from \"react\";\r\nimport socketIOClient from \"socket.io-client\";\r\nimport ENDPOINT from \"./server-end-point\";\r\n\r\nconst NEW_CHAT_MESSAGE_EVENT = \"chat\"; // Name of the event\r\nconst SOCKET_SERVER_URL = ENDPOINT;\r\n\r\n\r\nconst useChat = (roomId, username) => {\r\n    const [messages, setMessages] = useState([]); // Sent and received messages\r\n    const socketRef = useRef();\r\n\r\n    useEffect(() => {\r\n\r\n        // Creates a WebSocket connection\r\n        socketRef.current = socketIOClient(SOCKET_SERVER_URL, {\r\n            forceNew: true,\r\n            reconnectionDelay: 1000,\r\n            reconnection: true,\r\n            reconnectionAttempts: 10,\r\n            transports: ['websocket'],\r\n            agent: false,\r\n            upgrade: false,\r\n            rejectUnauthorized: false,\r\n            query: { roomId, username }\r\n        });\r\n\r\n        // Listens for incoming messages\r\n        socketRef.current.on(NEW_CHAT_MESSAGE_EVENT, (message) => {\r\n            const incomingMessage = {\r\n                ...message,\r\n                ownedByCurrentUser: message.senderId === socketRef.current.id,\r\n            };\r\n            setMessages((messages) => [...messages, incomingMessage]);\r\n        });\r\n\r\n        // Destroys the socket reference\r\n        // when the connection is closed\r\n        return () => {\r\n            socketRef.current.disconnect();\r\n        };\r\n    }, [roomId]);\r\n\r\n    // Sends a message to the server that\r\n    // forwards it to all users in the same room\r\n    const sendMessage = (messageBody) => {\r\n        try {\r\n            socketRef.current.emit(NEW_CHAT_MESSAGE_EVENT, {\r\n                body: messageBody,\r\n                senderId: socketRef.current.id,\r\n            });\r\n        } catch (err) {\r\n            alert(err);\r\n        }\r\n\r\n\r\n    };\r\n\r\n\r\n    return { messages, sendMessage };\r\n};\r\n\r\nexport default useChat;","// Magic server URI. Uncomment localhost when server is running locally.\r\n\r\nconst ENDPOINT = \"https://spicy-chess.herokuapp.com/\";\r\n// const ENDPOINT = \"localhost:5000\";\r\nexport default ENDPOINT;","import React, { Component, useState, useEffect } from \"react\";\r\n\r\nimport \"./chatRoom.css\";\r\nimport useChat from \"../helpers/useChat\";\r\n\r\n\r\nconst ChatRoom = (props) => {\r\n  const roomId = props.room; // Gets roomId\r\n  const username = props.username; // Get Username\r\n  const { messages, sendMessage } = useChat(roomId); // Creates a websocket and manages messaging\r\n  const [newMessage, setNewMessage] = React.useState(\"\"); // Message to be sent\r\n\r\n  console.log(roomId)\r\n\r\n  const handleNewMessageChange = (event) => {\r\n    setNewMessage(event.target.value);\r\n  };\r\n\r\n  const handleSendMessage = () => {\r\n    if(!newMessage.length == 0){\r\n      sendMessage(newMessage);\r\n      setNewMessage(\"\");\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    var element = document.getElementById(\"scroll-To-Top\");\r\n\r\n    element.scrollTop = element.scrollHeight - element.clientHeight;\r\n\r\n  });\r\n\r\n\r\n  return (\r\n    <div className=\"chat-room-container\">\r\n      <h1 className=\"room-name\">Room: {roomId}</h1>\r\n      <p>Username: {username}</p>\r\n      <div id=\"scroll-To-Top\" className=\"messages-container\">\r\n        <ol className=\"messages-list\">\r\n          {messages.map((message, i) => (\r\n            <li id=\"\"\r\n              key={i}\r\n              className={`message-item ${\r\n                message.ownedByCurrentUser ? \"my-message\" : \"received-message\"\r\n                }`}\r\n            >\r\n              {message.body}\r\n            </li>\r\n          ))}\r\n        </ol>\r\n      </div>\r\n      <textarea\r\n        value={newMessage}\r\n        onChange={handleNewMessageChange}\r\n        placeholder=\"Write message...\"\r\n        className=\"new-message-input-field\"\r\n      />\r\n      <button onClick={handleSendMessage} className=\"send-message-button\">\r\n        Send\r\n        </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatRoom;","import React from 'react';\n\nimport '../index.css';\n\nexport default function Square(props) {\n\n  return (\n    <button className={\"square \" + props.shade}\n      onClick={props.onClick}\n      style={props.style}\n      key={props.keyVal}\n    >\n\n    </button>\n  );\n\n}\n","import React from 'react';\n\nimport '../index.css';\nimport Square from './square.js';\n\nexport default class Board extends React.Component {\n\n  renderSquare(i, squareShade) {\n    return <Square\n      key={i}\n      keyVal={i}\n      style={this.props.squares[i] ? this.props.squares[i].style : null}\n      shade={squareShade}\n      onClick={() => this.props.onClick(i)}\n    />\n  }\n\n  render() {\n    const board = [];\n    for (let i = 0; i < 8; i++) {\n      const squareRows = [];\n      for (let j = 0; j < 8; j++) {\n        const squareShade = (isEven(i) && isEven(j)) || (!isEven(i) && !isEven(j)) ? \"light-square\" : \"dark-square\";\n        squareRows.push(this.renderSquare((i * 8) + j, squareShade));\n      }\n      board.push(<div className=\"board-row\" key={i}>{squareRows}</div>)\n    }\n\n    return (\n      <div>\n        {board}\n      </div>\n    );\n  }\n}\n\n\nfunction isEven(num) {\n  return num % 2 === 0\n}","import React from 'react';\n\nimport '../index.css';\nimport Square from './square.js';\n\nexport default class FallenSoldierBlock extends React.Component {\n\n  renderSquare(square, i, squareShade) {\n    return <Square\n      key={i}\n      keyVal={i}\n      piece={square}\n      style={square.style}\n    />\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">{this.props.whiteFallenSoldiers.map((ws, index) =>\n          this.renderSquare(ws, index)\n        )}</div>\n        <div className=\"board-row\">{this.props.blackFallenSoldiers.map((bs, index) =>\n          this.renderSquare(bs, index)\n        )}</div>\n      </div>\n    );\n  }\n}\n\n","export default class Piece {\n  constructor(player, iconUrl) {\n    this.player = player;\n    this.style = { backgroundImage: \"url('\" + iconUrl + \"')\" };\n  }\n\n  getPlayer() {\n    return this.player\n  }\n}","import Piece from './piece.js';\nimport { isSameDiagonal, isPathClean } from '../helpers'\n\n\nconst white_kill0 = \"https://upload.wikimedia.org/wikipedia/commons/b/b1/Chess_blt45.svg\";\nconst white_kill1 = \"https://www.imgurupload.com/uploads/20201115/1f14874dc1c2d6ab35ff3177579c5da9f2f91423.png\";\nconst white_kill2 = \"https://www.imgurupload.com/uploads/20201115/d071735b8456e293267d0b91bee160918426f8d3.png\";\nconst white_kill3 = \"https://www.imgurupload.com/uploads/20201115/e685d90b0e2d0336e760ad5c0cec1a42fc8b1db6.png\";\nconst white_kill4 = \"https://www.imgurupload.com/uploads/20201115/6ab705d5c61f572db1e54cc42cf4b76e3e848c12.png\";\n\nconst black_kill0 = \"https://upload.wikimedia.org/wikipedia/commons/9/98/Chess_bdt45.svg\";\nconst black_kill1 = \"https://www.imgurupload.com/uploads/20201115/b8a88d11051b60bd51fbfa4a539bcbf1cbeaf43b.png\";\nconst black_kill2 = \"https://www.imgurupload.com/uploads/20201115/8699bb174262b2059fde2c9e9819626282b68f18.png\";\nconst black_kill3 = \"https://www.imgurupload.com/uploads/20201115/1022c9d9cd88cda1aa7b5a6e89d955cdc93a9a94.png\";\nconst black_kill4 = \"https://www.imgurupload.com/uploads/20201115/dad91de73865834fe7652b68e085ee278b112b61.png\";\n\nexport default class Bishop extends Piece {\n  constructor(player,kills) {\n    let white_image = white_kill0;\n    let black_image = black_kill0;\n    if (player === 1){\n      if(kills){\n        switch(kills){\n          case 0:\n            white_image = white_kill0;\n            break;\n          case 1:\n            white_image = white_kill1;\n            break;\n          case 2:\n            white_image = white_kill2;\n            break;\n          case 3:\n            white_image = white_kill3;\n            break;\n          default:\n            white_image = white_kill4;\n            break;\n        }\n      }\n      else {\n        white_image = white_kill0;\n      }\n    } else {\n      if(kills){\n        switch(kills){\n          case 0:\n            black_image = black_kill0;\n            break;\n          case 1:\n            black_image = black_kill1;\n            break;\n          case 2:\n            black_image = black_kill2;\n            break;\n          case 3:\n            black_image = black_kill3;\n            break;\n          default:\n            black_image = black_kill4;\n            break;\n        }\n      }\n    }\n    \n    super(player, (player === 1 ? white_image : black_image ));\n  }\n\n  isMovePossible(src, dest, squares) {\n    return isPathClean(this.getSrcToDestPath(src, dest), squares) && isSameDiagonal(src, dest)\n  }\n\n  /**\n   * get path between src and dest (src and dest exclusive)\n   * @param  {num} src  \n   * @param  {num} dest \n   * @return {[array]}      \n   */\n  getSrcToDestPath(src, dest) {\n    let path = [], pathStart, pathEnd, incrementBy;\n    if (src > dest) {\n      pathStart = dest;\n      pathEnd = src;\n    }\n    else {\n      pathStart = src;\n      pathEnd = dest;\n    }\n    if (Math.abs(src - dest) % 9 === 0) {\n      incrementBy = 9;\n      pathStart += 9;\n    }\n    else {\n      incrementBy = 7;\n      pathStart += 7;\n    }\n\n    for (let i = pathStart; i < pathEnd; i += incrementBy) {\n      path.push(i);\n    }\n    return path;\n  }\n}\n","import Piece from './piece.js';\nimport { isSameDiagonal, isSameRow } from '../helpers'\n\nexport default class King extends Piece {\n  constructor(player) {\n    super(player, (player === 1 ? \"https://upload.wikimedia.org/wikipedia/commons/4/42/Chess_klt45.svg\" : \"https://upload.wikimedia.org/wikipedia/commons/f/f0/Chess_kdt45.svg\"));\n  }\n\n  isMovePossible(src, dest) {\n    return ((src - 9 === dest && isSameDiagonal(src, dest)) ||\n      src - 8 === dest ||\n      (src - 7 === dest && isSameDiagonal(src, dest)) ||\n      (src + 1 === dest && isSameRow(src, dest)) ||\n      (src + 9 === dest && isSameDiagonal(src, dest)) ||\n      src + 8 === dest ||\n      (src + 7 === dest && isSameDiagonal(src, dest)) ||\n      (src - 1 === dest && isSameRow(src, dest)))\n  }\n\n  /**\n   * always returns empty array because of one step\n   * @return {[]}\n   */\n  getSrcToDestPath(src, dest) {\n    return [];\n  }\n}\n","import Piece from './piece.js';\nimport { isSameRow } from '../helpers'\n\nexport default class Knight extends Piece {\n  constructor(player) {\n    super(player, (player === 1 ? \"https://upload.wikimedia.org/wikipedia/commons/7/70/Chess_nlt45.svg\" : \"https://upload.wikimedia.org/wikipedia/commons/e/ef/Chess_ndt45.svg\"));\n  }\n\n  isMovePossible(src, dest) {\n    return ((src - 17 === dest && !isSameRow(src, dest)) ||\n      (src - 10 === dest && !isSameRow(src, dest)) ||\n      (src + 6 === dest && !isSameRow(src, dest)) ||\n      (src + 15 === dest && !isSameRow(src, dest)) ||\n      (src - 15 === dest && !isSameRow(src, dest)) ||\n      (src - 6 === dest && !isSameRow(src, dest)) ||\n      (src + 10 === dest && !isSameRow(src, dest)) ||\n      (src + 17 === dest && !isSameRow(src, dest)))\n  }\n\n  /**\n   * always returns empty array because of jumping\n   * @return {[]}\n   */\n  getSrcToDestPath() {\n    return [];\n  }\n}\n","import Piece from './piece.js';\nimport { isSameDiagonal } from '../helpers'\n\nexport default class Pawn extends Piece {\n  constructor(player) {\n    super(player, (player === 1 ? \"https://upload.wikimedia.org/wikipedia/commons/4/45/Chess_plt45.svg\" : \"https://upload.wikimedia.org/wikipedia/commons/c/c7/Chess_pdt45.svg\"));\n    this.initialPositions = {\n      1: [48, 49, 50, 51, 52, 53, 54, 55],\n      2: [8, 9, 10, 11, 12, 13, 14, 15]\n    }\n  }\n\n  isMovePossible(src, dest, isDestEnemyOccupied) {\n\n    if (this.player === 1) {\n      if ((dest === src - 8 && !isDestEnemyOccupied) || (dest === src - 16 && !isDestEnemyOccupied && this.initialPositions[1].indexOf(src) !== -1)) {\n        return true;\n      }\n      else if (isDestEnemyOccupied && isSameDiagonal(src, dest) && (dest === src - 9 || dest === src - 7)) {\n        return true;\n      }\n    }\n    else if (this.player === 2) {\n      if ((dest === src + 8 && !isDestEnemyOccupied) || (dest === src + 16 && !isDestEnemyOccupied && this.initialPositions[2].indexOf(src) !== -1)) {\n        return true;\n      }\n      else if (isDestEnemyOccupied && isSameDiagonal(src, dest) && (dest === src + 9 || dest === src + 7)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * returns array of one if pawn moves two steps, else returns empty array  \n   * @param  {[type]} src  [description]\n   * @param  {[type]} dest [description]\n   * @return {[type]}      [description]\n   */\n  getSrcToDestPath(src, dest) {\n    if (dest === src - 16) {\n      return [src - 8];\n    }\n    else if (dest === src + 16) {\n      return [src + 8];\n    }\n    return [];\n  }\n}\n","import Piece from './piece.js';\nimport { isSameRow, isSameColumn, isSameDiagonal, isPathClean } from '../helpers'\n\nexport default class Queen extends Piece {\n  constructor(player) {\n    super(player, (player === 1 ? \"https://upload.wikimedia.org/wikipedia/commons/1/15/Chess_qlt45.svg\" : \"https://upload.wikimedia.org/wikipedia/commons/4/47/Chess_qdt45.svg\"));\n  }\n\n  isMovePossible(src, dest, squares) {\n    return isPathClean(this.getSrcToDestPath(src, dest), squares) && (isSameDiagonal(src, dest) || isSameRow(src, dest) || isSameColumn(src, dest));\n  }\n\n  /**\n   * get path between src and dest (src and dest exclusive)\n   * @param  {num} src  \n   * @param  {num} dest \n   * @return {[array]}      \n   */\n  getSrcToDestPath(src, dest) {\n    let path = [], pathStart, pathEnd, incrementBy;\n    if (src > dest) {\n      pathStart = dest;\n      pathEnd = src;\n    }\n    else {\n      pathStart = src;\n      pathEnd = dest;\n    }\n    if (Math.abs(src - dest) % 8 === 0) {\n      incrementBy = 8;\n      pathStart += 8;\n    }\n    else if (Math.abs(src - dest) % 9 === 0) {\n      incrementBy = 9;\n      pathStart += 9;\n    }\n    else if (Math.abs(src - dest) % 7 === 0) {\n      incrementBy = 7;\n      pathStart += 7;\n    }\n    else {\n      incrementBy = 1;\n      pathStart += 1;\n    }\n\n    for (let i = pathStart; i < pathEnd; i += incrementBy) {\n      path.push(i);\n    }\n    return path;\n  }\n}","import Piece from './piece.js';\nimport { isSameRow, isSameColumn, isSameDiagonal, isPathClean } from '../helpers'\n\nexport default class Rook extends Piece {\n  constructor(player) {\n    super(player, (player === 1 ? \"https://upload.wikimedia.org/wikipedia/commons/7/72/Chess_rlt45.svg\" : \"https://upload.wikimedia.org/wikipedia/commons/f/ff/Chess_rdt45.svg\"));\n  }\n\n  isMovePossible(src, dest, squares) {\n    return isPathClean(this.getSrcToDestPath(src, dest), squares) && (isSameColumn(src, dest) || isSameRow(src, dest));\n  }\n\n  /**\n   * get path between src and dest (src and dest exclusive)\n   * @param  {num} src  \n   * @param  {num} dest \n   * @return {[array]}      \n   */\n  getSrcToDestPath(src, dest) {\n    let path = [], pathStart, pathEnd, incrementBy;\n    if (src > dest) {\n      pathStart = dest;\n      pathEnd = src;\n    }\n    else {\n      pathStart = src;\n      pathEnd = dest;\n    }\n    if (Math.abs(src - dest) % 8 === 0) {\n      incrementBy = 8;\n      pathStart += 8;\n    }\n    else {\n      incrementBy = 1;\n      pathStart += 1;\n    }\n\n    for (let i = pathStart; i < pathEnd; i += incrementBy) {\n      path.push(i);\n    }\n    return path;\n  }\n}\n","import Bishop from '../pieces/bishop.js';\nimport King from '../pieces/king.js';\nimport Knight from '../pieces/knight.js';\nimport Pawn from '../pieces/pawn.js';\nimport Queen from '../pieces/queen.js';\nimport Rook from '../pieces/rook.js';\n\nexport default function initialiseChessBoard() {\n  const squares = Array(64).fill(null);\n\n  for (let i = 8; i < 16; i++) {\n    squares[i] = new Pawn(2);\n    squares[i + 40] = new Pawn(1);\n  }\n  squares[0] = new Rook(2);\n  squares[7] = new Rook(2);\n  squares[56] = new Rook(1);\n  squares[63] = new Rook(1);\n\n  squares[1] = new Knight(2);\n  squares[6] = new Knight(2);\n  squares[57] = new Knight(1);\n  squares[62] = new Knight(1);\n\n  squares[2] = new Bishop(2);\n  squares[5] = new Bishop(2);\n  squares[58] = new Bishop(1);\n  squares[61] = new Bishop(1);\n\n  squares[3] = new Queen(2);\n  squares[4] = new King(2);\n\n  squares[59] = new Queen(1);\n  squares[60] = new King(1);\n\n  return squares;\n}","import React from 'react';\n\nimport '../index.css';\nimport Board from './board.js';\nimport FallenSoldierBlock from './fallen-soldier-block.js';\nimport initialiseChessBoard from '../helpers/board-initialiser.js';\nimport Knight from '../pieces/knight';\nimport Queen from '../pieces/queen';\nimport King from '../pieces/king';\nimport Pawn from '../pieces/pawn';\nimport Bishop from '../pieces/bishop';\nimport Rook from '../pieces/rook';\nimport socketIOClient from \"socket.io-client\";\nimport ENDPOINT from \"../helpers/server-end-point\";\nimport $ from 'jquery';\nconst GAME_STATE_EVENT = \"gameState\"; // Name of the event\nconst PLAYER_LIST_EVENT = \"playerList\";\nconst SOCKET_SERVER_URL = ENDPOINT;\n\n\nexport default class Game extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      squares: initialiseChessBoard(),\n      whiteFallenSoldiers: [],\n      blackFallenSoldiers: [],\n      player: 1,\n      sourceSelection: -1,\n      status: '',\n      turn: 'white',\n      pieces: {\n        white : [],\n        black: []\n      },\n      gameOver: false,\n      playerList : []\n\n    }\n  }\n\n  componentDidMount() {\n    // Runs after the first render() lifecycle\n\n    const squares = [...this.state.squares];\n    // Best practice to copy JSON objects.\n    const pieces = JSON.parse(JSON.stringify(this.state.pieces));\n\n    for (let i = 0; i < squares.length; i++){\n      const square = squares[i];\n      if (square !== null){\n        const piece_name = square.constructor.name;\n        const piece_owner = square.player;\n        const piece_style = square.style;\n  \n        const piece = {\n          id: piece_name + piece_owner + i,\n          name: piece_name,\n          owner: piece_owner,\n          style: piece_style,\n          position_history: [i],\n          kills: 0,\n          alive: true,\n          status: \"\"\n        }\n        \n        if (piece_owner === 1){\n          pieces.white.push(piece);\n        } else {\n          pieces.black.push(piece);\n        }\n      }\n    }\n    this.setState({pieces: pieces});\n\n\n    const roomId = this.props.room;\n    const username = this.props.username;\n    this.socket = socketIOClient(SOCKET_SERVER_URL, {\n      forceNew: true,\n      reconnectionDelay: 1000,\n      reconnection: true,\n      reconnectionAttempts: 10,\n      transports: ['websocket'],\n      agent: false,\n      upgrade: false,\n      rejectUnauthorized: false,\n      query: { roomId, username}\n  });\n\n \n  this.socket.on(PLAYER_LIST_EVENT, (playerList) => {\n    console.log(playerList)\n    let users = [];\n    for (let player of playerList) {\n      if (player.roomId === roomId) {\n        users = [...users,player.username]\n      }\n    }\n    this.setState({playerList : users});\n  });\n\n\n  this.socket.on(GAME_STATE_EVENT, (gameState) => {\n    console.log(\"RECEIVING THIS FROM SERVER\");\n    console.log(gameState);\n   \n    if (gameState) {\n      this.setState(gameState);\n      console.log(\"game state updated\")\n    } else {\n      console.log(\"gamestate was empty\");\n    }\n  });\n\n\n  }\n\n  addPieceNameToSquares = (currentState) => {\n    const squares = [...currentState.squares];\n\n    for (let i = 0; i < squares.length; i++){\n      console.log(squares[i]);\n      \n      if (squares[i] !== null){\n        console.log(squares[i].constructor.name);\n        squares[i][\"piece_name\"] = squares[i].constructor.name;\n      }\n    }\n\n    currentState.squares = squares;\n    return currentState;\n  }\n\n  updateGameState() {\n    let currentState = this.state;\n\n    if(!this.state.squares[0].piece_name){\n      currentState = this.addPieceNameToSquares(currentState);\n    }\n\n    console.log(\"SENDING TO SERVER THIS\");\n    console.log(currentState);\n    this.socket.emit(GAME_STATE_EVENT,currentState);\n  }\n\n  createKnightsTest(index) {\n    const squares = [...this.state.squares];\n\n    squares[index] = new Knight(2);\n    for (let i=index+1; i < index+5; i++){\n      squares[i] = new Knight(1);\n    }\n    this.setState({squares : squares});\n  }\n\n\n  getPieceByInitialPosition = (initialPosition, tempPieces) => {\n    let pieces = JSON.parse(JSON.stringify(this.state.pieces));\n    if (tempPieces){\n      pieces = tempPieces;\n    }\n    let selectedPiece = null;\n    Object.keys(pieces).forEach(colour => {\n      for (const piece of pieces[colour]){\n        if (piece.position_history[0] === initialPosition){\n          selectedPiece = piece;\n          break;\n        }\n      }\n    });\n    return selectedPiece;\n  }\n\n  getPieceById = (id, tempPieces) => {\n    let pieces = JSON.parse(JSON.stringify(this.state.pieces));\n    if (tempPieces){\n      pieces = tempPieces;\n    }\n    let selectedPiece = null;\n    Object.keys(pieces).forEach(colour => {\n      for (const piece of pieces[colour]){\n        if (piece.id === id){\n          selectedPiece = piece;\n          break;\n        }\n      }\n    });\n    return selectedPiece;\n  }\n\n  getPiece = (position,tempPieces) => {\n    let pieces = JSON.parse(JSON.stringify(this.state.pieces));\n    if (tempPieces){\n      pieces = tempPieces;\n    }\n    let selectedPiece = null;\n    Object.keys(pieces).forEach(colour => {\n      for (const piece of pieces[colour]){\n        if (piece.position_history[piece.position_history.length - 1] === position && piece.alive){\n          selectedPiece = piece;\n        }\n      }\n    });\n    return selectedPiece;\n  }\n\n  killPieceAt = (position, piecesAndSquares) => {\n    let pieces = JSON.parse(JSON.stringify(this.state.pieces));\n    let squares = [...this.state.squares];\n\n    if (piecesAndSquares){\n      pieces = piecesAndSquares.pieces;\n      squares = piecesAndSquares.squares;\n    }\n\n    const piece = this.getPiece(position);\n    if (piece !== null){\n      piece.alive = false;\n      squares[position] = null;\n      pieces = this.updatePiecesObject(pieces,piece);\n    }\n    this.setState({\n      squares: squares,\n      pieces: pieces\n    });\n\n    const return_obj = {\n      squares: squares,\n      pieces: pieces\n    }\n    return return_obj;\n  }\n\n  createPieceObject = (name,owner,kills) => {\n    let newPiece = null;\n    switch(name){\n      case 'Rook':\n        newPiece = new Rook(owner,kills);\n        break;\n      case 'Pawn':\n        newPiece = new Pawn(owner,kills);\n        break;\n      case 'Bishop':\n        newPiece = new Bishop(owner,kills);\n        break;\n      case 'King':\n        newPiece = new King(owner,kills);\n        break;\n      case 'Queen':\n        newPiece = new Queen(owner,kills);\n        break;\n      case 'Knight':\n        newPiece = new Knight(owner,kills);\n        break;\n    }\n    newPiece.piece_name = name;\n    return newPiece\n  }\n\n  // If you give it only a position, it will resurect a piece that used to be there or nothing if incorrect index\n  // If you give it a dead piece and a custom position.. it will spawn that piece there instead killing any piece on that spot\n  resurrectPiece = (position, piece, piecesAndSquares) => {\n    let newPiece = null;\n    let currentPiece = null;\n    if(piece){\n      currentPiece = piece;\n    } else if (!piecesAndSquares){\n      currentPiece = this.getPieceByInitialPosition(position);\n    } else {\n      currentPiece = this.getPieceByInitialPosition(position, piecesAndSquares.pieces);\n    }\n\n    newPiece = this.createPieceObject(currentPiece.name,currentPiece.owner,currentPiece.kills);\n\n    let pieces = JSON.parse(JSON.stringify(this.state.pieces));\n    let squares = [...this.state.squares];\n\n    if (piecesAndSquares){\n      pieces = piecesAndSquares.pieces;\n      squares = piecesAndSquares.squares;\n    }\n\n    if (currentPiece !== null && currentPiece.alive !== true){\n      let occupyingPiece = null;\n      if (squares[position] !== null){\n        occupyingPiece = this.getPiece(position, pieces);\n        piecesAndSquares = this.resurrectPiece(occupyingPiece.position_history[0], occupyingPiece, piecesAndSquares);\n        pieces = this.updatePiecesObject(pieces, occupyingPiece);\n      }\n      squares[position] = newPiece;\n      squares[position].piece_name = newPiece.constructor.name;\n      currentPiece.alive = true;\n      currentPiece.position_history = [position];\n      pieces = this.updatePiecesObject(pieces, currentPiece);\n    }\n    this.setState({\n      squares: squares,\n      pieces: pieces\n    });\n\n    const return_obj = {\n      squares: squares,\n      pieces: pieces\n    }\n\n    // console.log(`Revive Position ${position}`);\n    // console.log(\"Piece initial position\");\n    // console.log(currentPiece.position_history[0]);\n    // console.log(\"PiecesAndSquares -> Piece\");\n    // console.log(currentPiece);\n    // console.log(\"PiecesAndSquares -> Square\");\n    // console.log(return_obj.squares[position]);\n\n    return return_obj;\n  }\n\n  checkKingIsAlive = (player, tempPieces) => {\n    const whiteKingID = \"King160\";\n    const blackKingID = \"King24\";\n\n    let currentTempPieces = null;\n\n    if (tempPieces){\n      currentTempPieces = tempPieces;\n    }\n\n    let alive = false;\n    if (player === 1){\n      alive = this.getPieceById(whiteKingID, currentTempPieces).alive;\n    } else {\n      alive = this.getPieceById(blackKingID, currentTempPieces).alive;\n    }\n    return alive;\n  }\n\n  updatePiecesObject = (pieces, updated_piece) => {\n    Object.keys(pieces).forEach(colour => {\n      for (const piece of pieces[colour]){\n        if (piece.id === updated_piece.id){\n          pieces[colour][pieces[colour].indexOf(piece)] = updated_piece;      \n        }\n      }\n    });\n    return pieces;\n  }\n\n  switchPlayerTurn = () => {\n    let currentPlayer = this.state.player;\n    if (currentPlayer === 1){\n      currentPlayer = 2;\n    } else {\n      currentPlayer = 1;\n    }\n    this.setState({player: currentPlayer});\n  }\n\n  canPlayerMove = () => {\n    const currentPlayerTurn = this.state.player - 1;\n    return this.props.username === this.state.playerList[currentPlayerTurn];\n  }\n\n  // All live pieces return to their initial position\n  theFloodEffect = () => {\n    let squares = [...this.state.squares];\n    let pieces = JSON.parse(JSON.stringify(this.state.pieces));\n    \n    Object.keys(pieces).forEach(colour => {\n      for (let piece of pieces[colour]){\n        // If piece is alive and was moved\n        if (piece.alive && piece.position_history.length > 1){\n          const currentPosition = piece.position_history[piece.position_history.length - 1];\n          const originalPosition = piece.position_history[0];\n          let piecesAndSquares = {pieces:pieces, squares:squares};\n          piecesAndSquares = this.killPieceAt(currentPosition,piecesAndSquares);\n          piecesAndSquares = this.resurrectPiece(originalPosition,null,piecesAndSquares);\n\n          squares = piecesAndSquares.squares;\n          pieces = piecesAndSquares.pieces;\n\n        }\n      }\n    });\n\n    this.setState({squares: squares, pieces: pieces});\n  }\n\n  handleClick(i) {\n    console.log(`Clicked at ${i}`);\n    const squares = [...this.state.squares];\n    const currentPlayer = this.state.player;\n    let pieces = JSON.parse(JSON.stringify(this.state.pieces));\n    let gameOver = this.state.gameOver;\n    let selectedPiece = this.getPiece(i);\n    let sourceSelection = this.state.sourceSelection;\n    let attacking = false;\n    let moving = false;\n\n    if (!gameOver){\n      gameOver = !this.checkKingIsAlive(currentPlayer);\n    }\n\n    if (!gameOver){\n       // Selecting new piece\n      if (selectedPiece !== null){\n        // If piece belongs to the player in turn\n        if (this.canPlayerMove()){\n          console.log(\"Valid piece selected...\");\n          console.log(selectedPiece);\n          \n          // If a piece was previously selected, de-select it...\n          if (sourceSelection !== -1){\n            squares[sourceSelection].style = { ...squares[sourceSelection].style, backgroundColor: \"\" };\n          }\n          sourceSelection = i; \n          squares[i].style = { ...squares[i].style, backgroundColor: \"RGB(111,143,114)\" }; // Emerald from http://omgchess.blogspot.com/2015/09/chess-board-color-schemes.html\n        } \n        // If piece belongs to enemy\n        else {\n          if (sourceSelection !== -1){\n            attacking = true;\n          } else {\n            console.log(\"Click on your own damn pieces...\");\n          }\n        }\n      } else {\n        if (sourceSelection !== -1){\n          moving = true;\n        } else {\n          console.log(\"Empty space clicked with no selection made...\");\n        }\n      }\n  \n      if (moving || attacking){\n        if (squares[sourceSelection].piece_name){\n          squares[sourceSelection] = this.createPieceObject(squares[sourceSelection].piece_name,squares[sourceSelection].player);\n        }\n        if (squares[sourceSelection]){\n          const isMovePossible = squares[sourceSelection].isMovePossible(sourceSelection, i, Boolean(squares[i]));\n          if (isMovePossible){\n            console.log(\"A piece was properly selected.. so moving..\");\n            let previouslySelectedPiece = this.getPiece(sourceSelection);\n            previouslySelectedPiece.position_history.push(i);\n            if (attacking){\n              if (selectedPiece.name === 'King'){\n                gameOver = true;\n              }\n              selectedPiece.alive = false;\n              pieces = this.updatePiecesObject(pieces, selectedPiece);\n              previouslySelectedPiece.kills = previouslySelectedPiece.kills + 1;\n            }\n            pieces = this.updatePiecesObject(pieces, previouslySelectedPiece);\n            console.log(previouslySelectedPiece);\n            let piece_object = this.createPieceObject(previouslySelectedPiece.name, previouslySelectedPiece.owner, previouslySelectedPiece.kills);\n            squares[i] = piece_object;\n            squares[i].style = { ...squares[i].style, backgroundColor: \"\" };\n            console.log(\"Name of square at this point\");\n            console.log(squares[i].piece_name);\n            squares[sourceSelection] = null;\n            sourceSelection = -1;\n            this.switchPlayerTurn();\n            setTimeout(() => this.updateGameState(), 1000);\n          } else {\n            console.log(\"Invalid move, deselected\");\n            squares[sourceSelection].style = { ...squares[sourceSelection].style, backgroundColor: \"\" };\n            sourceSelection = -1;\n          }\n        } else {\n          console.log(\"SOMETHING GOT BROKEN\");\n        }\n        \n        }\n      this.setState({\n        squares: squares,\n        sourceSelection: sourceSelection,\n        pieces: pieces,\n        gameOver: gameOver\n      })\n    }\n    else {\n      console.log(\"Game over.. stop clicking now...\");\n    }\n  }\n\n  render() {\n\n    console.log(\"can\", this.props.username, \"move?\", this.canPlayerMove());\n\n    const players = this.state.playerList.map((player, index) => {\n      if (index === 0){\n      return <p><span>♖</span> {player}</p>\n      } else if (index === 1) {\n        return <p><span>♜</span> {player}</p>\n      } else {\n        return <p>{player}</p>\n      }\n    })\n\n    return (\n      <div>\n        {players}\n        <div className=\"game\">\n          <div className=\"game-board\">\n            <Board\n              squares={this.state.squares}\n              onClick={(i) => this.handleClick(i)}\n            />\n          </div>\n          <div className=\"game-info\">\n            <h3>Turn</h3>\n            <div id=\"player-turn-box\" style={{ backgroundColor: this.state.player === 1 ? \"white\" : \"black\" }}>\n\n            </div>\n            <div className=\"game-status\">{this.state.status}</div>\n\n            <div className=\"fallen-soldier-block\">\n\n              {<FallenSoldierBlock\n                whiteFallenSoldiers={this.state.whiteFallenSoldiers}\n                blackFallenSoldiers={this.state.blackFallenSoldiers}\n              />\n              }\n            </div>\n\n          </div>\n        </div>\n        {/* Test buttons */}\n        <button onClick={() => this.createKnightsTest(25)}>add knights1</button>\n        <button onClick={() => this.killPieceAt(0)}>Kill at 0</button>\n        <button onClick={() => this.resurrectPiece(0)}>Ressurect at 0</button>\n        <button onClick={() => this.theFloodEffect()}>Activate the Flood</button>\n        <button onClick={() => this.updateGameState()}>End Turn</button>\n        <div className=\"icons-attribution\">\n          <div> <small> Chess Icons And Favicon (extracted) By en:User:Cburnett [<a href=\"http://www.gnu.org/copyleft/fdl.html\">GFDL</a>, <a href=\"http://creativecommons.org/licenses/by-sa/3.0/\">CC-BY-SA-3.0</a>, <a href=\"http://opensource.org/licenses/bsd-license.php\">BSD</a> or <a href=\"http://www.gnu.org/licenses/gpl.html\">GPL</a>], <a href=\"https://commons.wikimedia.org/wiki/Category:SVG_chess_pieces\">via Wikimedia Commons</a> </small></div>\n        </div>\n        <ul>\n          <li><a href=\"https://github.com/TalhaAwan/react-chess\" target=\"_blank\">Source Code</a> </li>\n          <li><a href=\"https://www.techighness.com/post/develop-two-player-chess-game-with-react-js/\">Blog Post</a></li>\n        </ul>\n      </div>\n\n\n    );\n  }\n}\n\n","import './index.css';\r\nimport React, { useState } from \"react\";\r\nimport ChatRoom from \"./components/chatRoom.js\";\r\nimport Game from './components/game.js';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n\r\n    const [room, setRoom] = useState(\"global\");\r\n    const [initialRoom, setInitialRoom] = useState(\"\");\r\n    const [showGameScreen, setShowGameScreen] = useState(false);\r\n    const [username, setUsername] = useState(\"\");\r\n\r\n\r\n    const handleRoomNameChange = (event) => {\r\n        setInitialRoom(event.target.value);\r\n    };\r\n\r\n    const handleRoomJoin = () => {\r\n        if (initialRoom && username) {\r\n            setRoom(initialRoom);\r\n            setShowGameScreen(true);\r\n        }\r\n    }\r\n\r\n    const handleUsernameChange = (event) => {\r\n        setUsername(event.target.value)\r\n    }\r\n\r\n    // const sendUsername\r\n\r\n    const gameContent = (<div className=\"outer-container\">\r\n        <div className=\"join-wrapper\">\r\n            <Game room={room} username={username}/>\r\n        </div>\r\n        <ChatRoom room={room} username={username} />\r\n\r\n    </div>);\r\n\r\n\r\n    const homeContent = (\r\n        <div className=\"outer-container\">\r\n            <h1>Welcome to Spicy Chess</h1>\r\n            <div className=\"join-wrapper\">\r\n\r\n                <h2>What shall we call you?</h2>\r\n\r\n                <div>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"your username...\"\r\n                        value={username}\r\n                        onChange={handleUsernameChange}\r\n                        className=\"text-input-field\"\r\n                    />\r\n                </div>\r\n\r\n                <h2>Find a worthy opponent</h2>\r\n\r\n                <div>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Your room's name...\"\r\n                        value={initialRoom}\r\n                        onChange={handleRoomNameChange}\r\n                        className=\"text-input-field\"\r\n                    />\r\n                    <button onClick={() => handleRoomJoin()}>Join Room</button>\r\n                </div>\r\n            </div>\r\n            <ChatRoom room={room} username={username} />\r\n\r\n        </div>);\r\n    return (\r\n        <>\r\n            {showGameScreen ? gameContent : homeContent}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App'\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}